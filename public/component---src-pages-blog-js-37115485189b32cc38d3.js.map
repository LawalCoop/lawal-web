{"version":3,"file":"component---src-pages-blog-js-37115485189b32cc38d3.js","mappings":"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","sources":["webpack://lawal-web/./src/components/modules/PostThumbnail.js","webpack://lawal-web/./src/pages/blog.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport data from '../../content/content.json';\nimport { useIntl, Link } from \"gatsby-plugin-react-intl\";\nimport Button from '../common/Button';\nimport Img from \"gatsby-image\";\n\nconst styles = data.styles;\n\n// Contenedor principal con estilo neobrutalista y bordes redondeados\nconst PostThumbnailWrapper = styled.div`\n    margin-bottom: 25px;\n    max-width: 320px;\n    flex-basis: 100%;\n    background: ${styles.colors.white};\n    border: 4px solid #000; /* Borde grueso */\n    border-radius: 14px; /* Bordes redondeados */\n    padding: 20px;\n    box-shadow: 8px 8px 0 #000; /* Sombra pronunciada */\n    transition: transform 0.2s ease, box-shadow 0.2s ease; /* Transición suave */\n\n    &:hover {\n        transform: translate(4px, 4px); /* Efecto de \"bajar\" */\n        box-shadow: 4px 4px 0 #000; /* Sombra reducida */\n    }\n\n    @media (min-width: ${styles.breakpoints.m}px) {\n        max-width: 351px;\n    }\n    @media (min-width: ${styles.breakpoints.l}px) {\n        flex-basis: 50%;\n        min-width: 300px;\n        max-width: 460px;\n        margin-bottom: 25px;\n    }\n`;\n\n// Enlace de la imagen con estilo neobrutalista y bordes redondeados\nconst PostThumbnailImage = styled(Link)`\n    display: block;\n    border-radius: 10px; /* Bordes redondeados */\n    margin-bottom: 10px;\n    height: 230px;\n    max-width: 320px;\n    overflow: hidden;\n    border: 2px solid #000; /* Borde grueso */\n    @media (min-width: ${styles.breakpoints.l}px) {\n        height: 215px;\n        margin-bottom: 15px;\n    }\n`;\n\n// Imagen con estilo neobrutalista\nconst Image = styled(Img)`\n    height: 100%;\n    width: 100%;\n    object-fit: cover; /* Asegura que la imagen cubra el espacio */\n`;\n\n// Título con estilo neobrutalista\nconst PostThumbnailTitle = styled(Link)`\n    display: block;\n    font-size: 1.16em;\n    line-height: 27px;\n    color: ${styles.colors.darkMainBg};\n    text-decoration: none;\n    margin-bottom: 10px;\n    font-weight: bold; /* Texto en negrita */\n    @media (min-width: ${styles.breakpoints.l}px) {\n        margin-bottom: 8px;\n    }\n`;\n\n// Descripción con estilo neobrutalista y línea divisoria\nconst PostThumbnailDescription = styled.p`\n    font-size: 0.88em;\n    line-height: 20px;\n    margin-bottom: 20px;\n    color: ${styles.colors.darkGrey};\n    border-bottom: 2px solid #000; /* Línea divisoria gruesa */\n    padding-bottom: 10px; /* Espacio debajo de la descripción */\n    @media (min-width: ${styles.breakpoints.l}px) {\n        margin-bottom: 15px;\n    }\n`;\n\n// Contenedor de botones con estilo neobrutalista\nconst BtnContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\n// Botón con estilo neobrutalista y bordes redondeados\nconst Btn = styled(Button)`\n    font-size: 0.88em;\n    margin: 0;\n    padding: 6px 12px;\n    border: 2px solid #000; /* Borde grueso */\n    border-radius: 10px; /* Bordes redondeados */\n    background: ${styles.colors.white};\n    color: #000;\n    box-shadow: 4px 4px 0 #000; /* Sombra pronunciada */\n    transition: transform 0.2s ease, box-shadow 0.2s ease; /* Transición suave */\n\n    &:hover {\n        transform: translate(2px, 2px); /* Efecto de \"bajar\" */\n        box-shadow: 2px 2px 0 #000; /* Sombra reducida */\n    }\n\n    @media (min-width: ${styles.breakpoints.l}px) {\n        font-size: 0.77em;\n        padding: 7px 15px;\n    }\n`;\n\nconst PostThumbnail = (props) => {\n    const intl = useIntl();\n\n    return (\n        <PostThumbnailWrapper>\n            <PostThumbnailImage to={props.shortSlug}>\n                <Image\n                    fluid={props.fluid}\n                    alt=\"\"\n                />\n            </PostThumbnailImage>\n            <PostThumbnailTitle to={props.shortSlug}>\n                <h3>{props.postTitle}</h3>\n            </PostThumbnailTitle>\n            <PostThumbnailDescription>{props.postDescription}</PostThumbnailDescription>\n            <BtnContainer>\n                <Btn\n                    type='btnSecondary'\n                    theme={styles}\n                    isLink\n                    href={props.slug}\n                    btnText={intl.formatMessage({ id: 'button.read' })}\n                />\n            </BtnContainer>\n        </PostThumbnailWrapper>\n    );\n};\n\nexport default PostThumbnail;","import React, { useState, useEffect, Fragment }  from 'react'\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components'\nimport data from '../content/content.json'\nimport { useIntl } from \"gatsby-plugin-react-intl\"\n\nimport Button from '../components/common/Button'\nimport PostThumbnail from '../components/modules/PostThumbnail'\n\nconst styles = data.styles\n\nconst MainWrapper = styled.div`\n  background-color: ${styles.colors.celestin};\n  padding-bottom: 180px;\n  @media (min-width: ${styles.breakpoints.m}px) {\n    padding-bottom: 228px;\n  }\n`\nconst PostsContainer = styled.div`\n  padding: 40px 20px 0 20px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  @media (min-width: ${styles.breakpoints.lpx}) {\n    padding-top: 55px;\n    padding-left: 0;\n    padding-right: 0;\n  }\n`\nconst PostsWrapper = styled.div`\n    display: inline-flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin: auto;\n    gap: 10px;\n    padding: 0;\n    max-width: 946px;\n    @media (min-width: ${styles.breakpoints.m}px) {\n      justify-content: flex-start;\n      margin: auto;\n      gap: 23px;\n      padding: 0;\n    }\n    @media (min-width: ${styles.breakpoints.l}px) {\n     width: 946px;\n    }\n`\n\nconst BlogTitle = styled.h1`\n  flex-basis: 100%;\n  font-size: 2.38em;\n  line-height: 49px;\n  color: ${styles.colors.purplePrimary};\n  margin: 0 auto 25px auto;\n  text-align: center;\n  @media (min-width: ${styles.breakpoints.m}px) {\n    text-align: left;\n    font-size: 3em;    \n    line-height: 62px;\n    margin-bottom: 35px;\n  }\n`\nconst Btn = styled(Button)`\n  margin: 0px auto 15px auto;\n`\n\n\nconst Blog = ({data: {allMarkdownRemark: { edges }}})  =>  {\n  const intl = useIntl();\n  const [currentPostsList, setCurrentPostsList] = useState([])\n  const [visiblePosts, setVisiblePosts] = useState([])\n  const [postsLimit, setPostsLimit] = useState(6)\n  const postsAdd = 6\n\n  useEffect(()=>{\n    let tempPostsList = []\n    edges.forEach(edge => {\n      if(edge.node.frontmatter.lang === intl.locale){\n        tempPostsList.push(edge)\n      }\n      setCurrentPostsList([...tempPostsList])\n    });\n  }, [])\n\n  useEffect(()=>{\n    if(currentPostsList.length !== 0){\n      setVisiblePosts(currentPostsList.slice(0,postsLimit))\n    }\n  }, [currentPostsList])\n\n  useEffect (()=>{\n    setVisiblePosts(currentPostsList.slice(0,postsLimit))\n  }, [postsLimit])\n  \n  const showMorePosts = () => {\n    if(postsLimit<=currentPostsList.length){\n      setPostsLimit(postsLimit+postsAdd)\n    }\n  }\n\n\n    return (\n      <MainWrapper>\n      <PostsContainer>\n        <PostsWrapper>\n            <BlogTitle>Blog</BlogTitle>\n\n            {visiblePosts.map( post => {\n                return(\n                  <PostThumbnail \n                    postTitle={post.node.frontmatter.title}\n                    postDescription={post.node.excerpt}\n                    fluid={post.node.frontmatter.image.childImageSharp.fluid}\n                    slug={`/${post.node.frontmatter.lang}/post${post.node.frontmatter.slug}`}\n                    shortSlug={`/post${post.node.frontmatter.slug}`}\n                  />\n                )\n            })}\n\n          </PostsWrapper>\n          <Btn\n            isLink={false}\n            type='btnPrimaryPurple'\n            theme={styles}\n            to=\"#\"\n            btnText={intl.formatMessage({id: 'verMasArticulos'})}\n            onButtonClick = {showMorePosts}\n          />\n        </PostsContainer>\n    </MainWrapper>\n\n    )\n}\n\nexport default Blog;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }, filter: {frontmatter: {type: {eq: \"post\"}}}) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 95)\n          frontmatter {\n            lang\n            type\n            title\n            author\n            slug\n            date\n            tags\n            image{\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            imageCredits\n          }\n        }\n      }\n    }\n  }\n`"],"names":["styles","data","PostThumbnailWrapper","styled","colors","white","breakpoints","m","l","PostThumbnailImage","Link","Image","Img","PostThumbnailTitle","darkMainBg","PostThumbnailDescription","darkGrey","BtnContainer","Btn","Button","props","intl","useIntl","to","shortSlug","fluid","alt","postTitle","postDescription","type","theme","isLink","href","slug","btnText","formatMessage","id","MainWrapper","celestin","PostsContainer","lpx","PostsWrapper","BlogTitle","purplePrimary","edges","allMarkdownRemark","useState","currentPostsList","setCurrentPostsList","visiblePosts","setVisiblePosts","postsLimit","setPostsLimit","useEffect","tempPostsList","forEach","edge","node","frontmatter","lang","locale","push","length","slice","map","post","title","excerpt","image","childImageSharp","onButtonClick"],"sourceRoot":""}